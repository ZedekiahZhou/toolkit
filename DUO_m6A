#!/bin/bash
# Author: Zhou Zhe
# Date: Mar 21, 2024
# Program: Pipeline 

ARGS=$(getopt -o 'hi:g:p:' -l 'help,inputfile:,species:,thread:,prx:,ds_rate:,untreat,test' -- "$@")
if [ $? != 0 ] ; then echo "Parse error! Terminating..." >&2 ; exit 1 ; fi
eval set -- "$ARGS"

USAGE='
Program: Call m6A for DUO-m6A data. This program should be called in src/, using ../01_RawData/*_2.fq.gz as input
Version: 0.1.0

usage: DUO_m6Am [options]

-h --help		print this help text and exit
-i --inputfile		raw fastq file, one file for each run
-g --species		genome used (Now hg38 and mm10 supported) or config file indicating information for reference files
-p --thread		threads used, default 20
--prx			prefix of output file name, default is the prefix of input file name
--ds_rate		proportion of reads to subsample, default 0.05
--untreat		run glori in untreat mode
--test			only output command to be run without actually running it
'

# parameters -----
while true; do
  case $1 in
    -h|--help) printf "%s\\n" "$USAGE"; exit 2;;
    -i|--inputfile) inputfile=$2; shift 2;;
    -g|--species) species=$2; shift 2;;
    -p|--thread) thread=$2; shift 2;;
    --prx) prx=$2; shift 2;;
    --ds_rate) subsample_rate=$2; shift 2;;
    --untreat) untreat=true; shift;;
    --test) test=true; shift;;
    --) shift; break ;;
    *) echo "Unrecognized options $1!"; exit 1;;
  esac
done

if [ ! $thread ]; then thread=20; fi

if [ ! $prx ]; then
  prx=`basename ${inputfile} | sed -E 's/(_L[0-9]_[12])?.f(ast)?q(.gz)?//'`
fi

if [ ! $subsample_rate ]; then subsample_rate=0.05; fi

case $species in
  hg38) 
    source "/lustre2/chengqiyi_pkuhpc/zhouzhe/bin/config/${species}.conf"
    if [ ${untreat} ]; then
      gtf=/lustre2/chengqiyi_pkuhpc/zhouzhe/genome/GLORI/hg38/anno/GCF_000001405.39_GRCh38.p13_genomic.gtf_change2Ens
    else
      gtf=/lustre2/chengqiyi_pkuhpc/zhouzhe/genome/GLORI/hg38/anno/GCF_000001405.39_GRCh38.p13_genomic.AG_converted.gtf
    fi
    ;;
  mm10)
    source "/lustre2/chengqiyi_pkuhpc/zhouzhe/bin/config/${species}.conf"
    if [ ${untreat} ]; then
      gtf=/lustre2/chengqiyi_pkuhpc/zhouzhe/genome/GLORI/mm10/anno/GCF_000001635.26_GRCm38.p6_genomic.gtf_change2Ens
    else
      gtf=/lustre2/chengqiyi_pkuhpc/zhouzhe/genome/GLORI/mm10/anno/GCF_000001635.26_GRCm38.p6_genomic.AG_converted.gtf
    fi
    ;;
  "") 
    echo "Please specifiy genome used (hg38 or mm10)!"
    ;;
  *) 
    source $species
    ;;
esac


# for file in ../01_RawData/*_2.fq.gz
echo $prx
dir_clean="../02_Clean/"
dir_sites="../03_Sites/"
dir_nosc="../04_NoSC/"
if [[ ! -d ${dir_clean} ]]; then mkdir ${dir_clean}; fi
if [[ ! -d ${dir_sites} ]]; then mkdir ${dir_sites}; fi
if [[ ! -d ${dir_nosc} ]]; then mkdir ${dir_nosc}; fi

# I. run GLORI --------
## 01. glori preprocessing
echo -e "\n[ `date` ]: Preprocessing --------"
glori -i ${inputfile} -g ${species} -m 3 --umi5_len 3 --fastqc --only_clean --gzip 

## 02. remove tag
echo -e "\n[ `date` ]: Remove Tag --------"
cutadapt -j 0 -g "TGACGCTGCCGACGATC;rightmost" -m 25 -O 17 -e 0.2 -o ${dir_clean}/${prx}_rmtag.fq --info-file ${dir_clean}/${prx}_rmtag.info ${dir_clean}/${prx}_clean.fq.gz
if [[ ! -d "../fastqc/rmtag" ]]; then mkdir ../fastqc/rmtag; fi
fastqc ${dir_clean}/${prx}_rmtag.fq --thread 20 -q -o ../fastqc/rmtag/

if [[ "" ]]; then
  ## downsample
  target_reads=41000000
  n_reads=`samtools view -c ${dir_sites}/${prx}_merged.sorted.bam`
  dsr=`echo "scale=4;${target_reads}/${n_reads}" | bc`
  if (( `echo ${dsr} '> 1' | bc` )); then dsr=.9999; fi
  samtools view -@ 4 -s 0${dsr} -b ${dir_sites}/${prx}_merged.sorted.bam > ${dir_sites}/${prx}_ds_merged.sorted.bam
  samtools index ${dir_sites}/${prx}_ds_merged.sorted.bam
  prx=${prx}_ds
fi

## 03. run glori, call all A sites (almostly)
echo -e "\n[ `date` ]: Run GLORI --------"
if [ ${untreat} ]; then
  glori -i ${dir_clean}/${prx}_rmtag.fq -g ${species} --prx ${prx} --combine --only_glori --untreat
else
  glori -i ${dir_clean}/${prx}_rmtag.fq -g ${species} --prx ${prx} --combine --only_glori
fi

# II. QC --------
outdir=${dir_sites}/QC/
if [[ ! -d $outdir ]]; then mkdir $outdir; fi

# 01. get alignments length
echo -e "\n[ `date` ]: Get alignments length --------"
samtools view -s ${subsample_rate} ${dir_sites}/${prx}_merged.sorted.bam -b > ${outdir}/${prx}_subsample_${subsample_rate}.bam
samtools index ${outdir}/${prx}_subsample_${subsample_rate}.bam
python /lustre2/chengqiyi_pkuhpc/zhouzhe/bin/get_align_length.py ${outdir}/${prx}_subsample_${subsample_rate}.bam ${outdir}/${prx}_align_len.csv


if [ ${untreat} ]; then
  echo ""
else
  # 02. get distribution of m6A sites (metaPlotR)
  echo -e "\n[ `date` ]: MetaPlotR --------"
  source activate metaPlotR
  metaPlotR_dir=/lustre2/chengqiyi_pkuhpc/zhouzhe/software/metaPlotR/
  annot_prx=/lustre2/chengqiyi_pkuhpc/zhouzhe/genome/anno_metaPlotR/${species}/${species}

  cat ${dir_sites}/${prx}.totalm6A.FDR.csv | awk -v OFS='\t' 'NR!=1 {print $1, $2-1, $2, $4, 0, $3}'  > ${outdir}/${prx}_m6A_sites.bed
  perl ${metaPlotR_dir}/annotate_bed_file.pl --bed ${outdir}/${prx}_m6A_sites.bed --bed2 ${annot_prx}_annot.sorted.bed > ${outdir}/${prx}_m6A_sites_annot.bed
  perl ${metaPlotR_dir}/rel_and_abs_dist_calc.pl --bed ${outdir}/${prx}_m6A_sites_annot.bed --regions ${annot_prx}_region_sizes.txt > ${outdir}/${prx}_m6A_sites.dist.measures.txt
  rm -rf ${outdir}/${prx}_m6A_sites.bed ${outdir}/${prx}_m6A_sites_annot.bed 
  source activate zzhou_bio

  # 03. get 5 bases around m6A sites
  echo -e "\n[ `date` ]: Get 5 bases around sites --------"
  cat ${dir_sites}/${prx}.totalm6A.FDR.csv | awk -v OFS='\t' 'NR!=1 {print $1, $2-3, $2+2, $4, 0, $3}'  > ${outdir}/${prx}_m6A_sites_len5.bed
  bedtools getfasta -s -fi ${genome2} -bed ${outdir}/${prx}_m6A_sites_len5.bed -bedOut > ${outdir}/${prx}_m6A_sites_len5_motif.bed
  rm -rf ${outdir}/${prx}_m6A_sites_len5.bed
fi